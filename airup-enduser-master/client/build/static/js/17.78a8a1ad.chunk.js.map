{"version":3,"sources":["components/utils/alert/Alert.js","components/inputs/text/Text.js","components/utils/Form.js","components/inputs/select/Select.js","components/account/Account.js"],"names":["Alert","children","className","icon","position","variant","wrap","isArray","length","error","isString","message","get","firstString","clsx","value","Text","props","errors","type","placeholderLabel","empty","isEmpty","label","placeholder","input","omit","onChange","ref","reference","errorStates","badInput","patternMismatch","rangeOverflow","rangeUnderflow","stepMismatch","tooLong","tooShort","typeMismatch","valueMissing","errorKeys","keys","Form","args","unmounted","state","busy","data","focus","bind","this","onSubmit","isFunction","getArguments","inputs","setState","setData","setValue","name","disabled","onBlur","target","validateInput","onFocus","set","onInput","onComplete","Promise","resolve","catch","then","setBusy","onFail","e","preventDefault","action","when","onSuccess","callback","deep","validity","attr","attributes","messages","current","forEach","key","push","upperFirst","replace","caption","startCase","toLowerCase","Component","Select","options","select","pick","Icon","isUndefined","map","subscriptions","none","daily","weekly","monthly","Account","getUploadParams","meta","url","headers","Authorization","user","getUserToken","handleChangeStatus","status","file","console","log","handleSubmit","files","f","handleFileSelection","profilePicture","URL","createObjectURL","formData","FormData","append","originalname","uploadProfilePicture","res","userAuthorize","success","setTimeout","email","phone","subscription","_id","style","backgroundImage","imageUrl","id","display","htmlFor","updateAccount","updateInputs","connect","api","auth"],"mappings":"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","file":"static/js/17.78a8a1ad.chunk.js","sourcesContent":["import get from 'lodash/get';\nimport isArray from 'lodash/isArray';\nimport isString from 'lodash/isString';\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport { firstString } from '../../../utils';\nimport './Alert.scss';\nimport Icon from '../Icon';\n\n/**\n * Alert component\n */\nexport default function Alert({\n  children,\n  className,\n  icon = 'fas-exclamation-circle',\n  position = 'bottom-left',\n  variant = 'red',\n  wrap = []\n}) {\n  if (!children || (isArray(children) && !children.length)) {\n    return (\n      <></>\n    );\n  }\n  const error = isString(children) ? children : (children[0] || children);\n  let message = get(error, 'response.data.error.message') || get(error, 'message') || error;\n  if (!isString(message)) {\n    message = firstString(message);\n  }\n  if (!message) {\n    return (\n      <></>\n    );\n  }\n  return (\n    <span className={clsx('Alert', className, 'alert-' + position, 'alert-' + variant)}>\n      <Icon value={icon} />\n      <span>{wrap[0] ? wrap[0] : <></>}{message}{wrap[1] ? wrap[1] : <></>}</span>\n    </span>\n  );\n}\n","import isEmpty from 'lodash/isEmpty';\nimport omit from 'lodash/omit';\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport './Text.scss';\nimport Alert from '../../utils/alert/Alert';\nimport Icon from '../../utils/Icon';\n\n/**\n * Text input\n */\nexport default function Text(props) {\n  const { children, className, errors, icon, type = 'text', placeholderLabel, value } = props,\n        empty = isEmpty(value),\n        label = placeholderLabel ? props.placeholder : props.label,\n        input = omit(props, ['children', 'className', 'errors', 'placeholderLabel', 'reference']);\n  return (\n    <label className={clsx('Text', className, 'type-' + type, { empty, 'placeholder-label': placeholderLabel })}>\n      {(!label ? '' :\n        <span className=\"label\">{label}</span>\n      )}\n      {(!icon ? '' :\n        <Icon value={icon} />\n      )}\n      <input type={type} {...input} onChange={props.onChange} ref={props.reference} />\n      {children}\n      <Alert wrap={['(', ')']}>{errors}</Alert>\n    </label>\n  );\n}\n","import get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\nimport isFunction from 'lodash/isFunction';\nimport isString from 'lodash/isString';\nimport keys from 'lodash/keys';\nimport set from 'lodash/set';\nimport startCase from 'lodash/startCase';\nimport upperFirst from 'lodash/upperFirst';\nimport React, { Component } from 'react';\nimport clsx from 'clsx';\n\nimport { bind, deep } from '../../utils';\nimport { when } from '../../store';\n\n/**\n * Error states\n */\nexport const errorStates = {\n  badInput: 'invalid :name',\n  patternMismatch: 'invalid :name format',\n  rangeOverflow: ':name is too high',\n  rangeUnderflow: ':name is too low',\n  stepMismatch: 'invalid :name amount',\n  tooLong: ':name is too long',\n  tooShort: ':name is too short',\n  typeMismatch: 'invalid :name format',\n  valueMissing: ':name is required',\n};\n\n/**\n * Error keys\n */\nexport const errorKeys = keys(errorStates);\n\n/**\n * Form component\n */\nexport default class Form extends Component {\n\n  constructor(...args) {\n    super(...args);\n    this.unmounted = false;\n    this.state = {\n      busy: false,\n      data: {},\n      error: null,\n      errors: {},\n      focus: {}\n    };\n    bind(this, [\n      'onComplete',\n      'onFail',\n      'onSubmit',\n      'onSuccess',\n      'setData',\n      'setValue'\n    ]);\n  }\n\n  render() {\n    const { children, className } = this.props,\n          { busy, errors } = this.state;\n    return (\n      <form className={clsx('Form', className, { busy, error: !isEmpty(errors) })} onSubmit={this.onSubmit}>\n        {isFunction(children) ? children(this.getArguments()) : children}\n      </form>\n    );\n  }\n\n  componentDidMount() {\n    if (!isEmpty(this.props.inputs)) {\n      this.setState({\n        data: this.props.inputs\n      });\n    }\n  }\n\n  componentDidUpdate(props) {\n    if (this.props.inputs !== props.inputs) {\n      this.setState({\n        data: this.props.inputs || {}\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.unmounted = true;\n  }\n\n  /**\n   * Get form arguments\n   */\n  getArguments() {\n    const { busy, data, error } = this.state;\n    return {\n      busy,\n      data,\n      error,\n      setData: this.setData,\n      setValue: this.setValue,\n      input: (name) => ({\n        disabled: busy,\n        errors: get(this.state.errors, name),\n        name,\n        value: get(this.state.data, name) || '',\n        onBlur: ({ target }) => {\n          this.validateInput(target);\n        },\n        onChange: ({ target: { value } }) => {\n          this.setValue(name, value);\n        },\n        onFocus: () => {\n          if (get(this.state.focus, name) !== true) {\n            set(this.state.focus, name, true);\n            this.setState({\n              focus: this.state.focus\n            });\n          }\n        },\n        onInput: ({ target }) => {\n          this.validateInput(target);\n        }\n      })\n    };\n  }\n\n  /**\n   * On complete\n   */\n  onComplete(error) {\n    if (isFunction(this.props.onComplete)) {\n      Promise.resolve(this.props.onComplete(error)).catch(() => null).then(() => {\n        this.setBusy(false);\n      });\n    } else {\n      this.setBusy(false);\n    }\n  }\n\n  /**\n   * On fail\n   */\n  onFail(error) {\n    this.setState({\n      error\n    });\n    if (isFunction(this.props.onFail)) {\n      this.props.onFail(error);\n    }\n    const message = get(error, 'response.data.error.message');\n    if (!isString(message) && !isEmpty(message)) {\n      this.setState({\n        errors: message\n      });\n    }\n    this.onComplete();\n  }\n\n  /**\n   * Submit form\n   */\n  onSubmit(e) {\n    e.preventDefault();\n    this.setState({\n      busy: true,\n      error: null\n    });\n    const { data } = this.state;\n    let action = null;\n    if (isFunction(this.props.action)) {\n      action = when(this.props.action(data));\n    } else if (isFunction(this.props.onSubmit)) {\n      action = this.props.onSubmit(data);\n    } else {\n      action = Promise.resolve();\n    }\n    action\n      .then(this.onSuccess)\n      .catch(this.onFail);\n  }\n\n  /**\n   * On success\n   */\n  onSuccess(data) {\n    if (isFunction(this.props.onSuccess)) {\n      Promise.resolve(this.props.onSuccess(data)).then(() => {\n        this.onComplete();\n      }).catch(\n        this.onComplete\n      );\n    } else {\n      this.onComplete();\n    }\n  }\n\n  /**\n   * Set busy\n   */\n  setBusy(busy) {\n    if (!this.unmounted) {\n      this.setState({\n        busy\n      });\n    }\n  }\n\n  /**\n   * Set data\n   */\n  setData(callback) {\n    return this.setState(({ data }) => ({\n      data: callback(data)\n    }));\n  }\n\n  /**\n   * Set input value\n   */\n  setValue(name, value) {\n    return this.setData((data) => (\n      deep(data, name, value)\n    ));\n  }\n\n  /**\n   * Validate input\n   */\n  validateInput(input) {\n    const name = input.name;\n    if (input.validity && (get(this.state.focus, name) === true)) {\n      const attr = input.attributes || {},\n            messages = [],\n            current = get(this.state.errors, name);\n      errorKeys.forEach((key) => {\n        if (input.validity[key] === true) {\n          messages.push(\n            upperFirst(\n              errorStates[key]\n                .replace(':name', (attr.caption || {}).value || startCase(name))\n                .toLowerCase()\n            )\n          );\n        }\n      });\n      if ((messages.length && (!current || !current.length)) ||\n          (!messages.length && (current && current.length))) {\n        this.setState({\n          errors: set(this.state.errors, name, messages)\n        });\n      }\n    }\n  }\n}\n","import isUndefined from 'lodash/isUndefined';\nimport keys from 'lodash/keys';\nimport pick from 'lodash/pick';\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport './Select.scss';\nimport Icon from '../../utils/Icon';\n\n/**\n * Select input\n */\nexport default function Select(props) {\n  const { children, className, icon, label, options } = props,\n        select = pick(props, ['name', 'required', 'value']);\n\n  return (\n    <label className={clsx('Select', className)}>\n      {(!label ? '' :\n        <span className=\"label\">{label}</span>\n      )}\n      {(!icon ? '' :\n        <Icon value={icon} />\n      )}\n      <select {...select} onChange={props.onChange}>\n        {(!isUndefined ? children :\n          keys(options).map((value) => (\n            <option key={value} value={value} >{options[value]}</option>\n          ))\n        )}\n      </select>\n      <Icon className=\"caret\" value=\"fas-caret-down\" />\n    </label>\n  );\n}\n","import keys from 'lodash/keys';\nimport pick from 'lodash/pick';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Dropzone from 'react-dropzone-uploader'\n\nimport { bind } from '../../utils';\nimport './Account.scss';\nimport Icon from '../utils/Icon';\nimport Form from '../utils/Form';\nimport Select from '../inputs/select/Select';\nimport Text from '../inputs/text/Text';\nimport {\n  updateAccount, userAuthorize,\n} from '../../api/user/actions';\nimport {\n  user\n} from '../../api'\nimport 'react-dropzone-uploader/dist/styles.css'\nimport { when } from 'jquery';\n\n/**\n * Subscriptions\n */\nexport const subscriptions = {\n  none: 'None',\n  daily: 'Once a day',\n  weekly: 'Once a week',\n  monthly: 'Once a month'\n};\n\n/**\n * Account component\n */\nclass Account extends Component {\n\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      inputs: {\n        email: '',\n        name: '',\n        phone: '',\n        subscription: '',\n        _id: ''\n      },\n      profilePicture: null\n    };\n    bind(this, [\n      'onSubmit'\n    ]);\n  }\n\n  getUploadParams = ({ meta }) => {\n    return {\n      url: '/api/v1/users/upload/profile', headers: {\n        Authorization: `Bearer ${user.getUserToken()}`\n      }\n    }\n  }\n\n  // called every time a file's `status` changes\n  handleChangeStatus = ({ meta, file }, status) => { console.log(status, meta, file) }\n\n  // receives array of files that are done uploading when submit button is clicked\n  handleSubmit = (files) => { console.log(files.map(f => f.meta)) }\n\n  handleFileSelection = (e) => {\n    const { target: { files: [file] = [] } = {} } = e || {};\n\n    if (!file) {\n      return;\n    }\n\n    this.setState({\n      profilePicture: URL.createObjectURL(file)\n    });\n\n    const formData = new FormData();\n\n    formData.append('file', file, file.originalname);\n    user.uploadProfilePicture(formData)\n      .then((res) => {\n        return when(userAuthorize())\n      })\n      .then(() => {\n        this.setState({\n          success: 'Profile Picture update successfully'\n        }, () => {\n          setTimeout(() => this.setState({\n            success: ''\n          }), 3000)\n        });\n      })\n      .catch(() => {\n        this.setState({\n          error: 'Failed to update profile picture'\n        }, () => {\n          setTimeout(() => this.setState({\n            error: ''\n          }), 3000)\n        });\n      });\n  }\n\n  render() {\n    const { inputs, profilePicture, error, success } = this.state;\n    const { user: { data: user = {} } = {} } = this.props || {};\n    return (\n      <div className=\"Account\">\n        <div className=\"header\">\n          <h2>{user.name}&apos;s Profile</h2>\n        </div>\n        <div className=\"content\">\n          <div className=\"photo\">\n            {false && <div className=\"content\">\n              <Dropzone\n                getUploadParams={this.getUploadParams}\n                onChangeStatus={this.handleChangeStatus}\n                maxFiles={1}\n                multiple={false}\n                canCancel={false}\n                inputContent=\"Drop A File\"\n                styles={{\n                  dropzone: { width: 400, height: 200 },\n                  dropzoneActive: { borderColor: 'green' },\n                }}\n                accept=\"image/*\"\n              />\n            </div>}\n            <div className=\"image\" style={{ backgroundImage: `url(${profilePicture ? profilePicture : (user.imageUrl ? `https://d2kijztdgb1j07.cloudfront.net/${user.imageUrl}` : \"/assets/images/man-at-sunset.jpg\")})` }}></div>\n            <span className=\"change\">\n              <input id=\"profile-file-selector\" type=\"file\" onChange={this.handleFileSelection} style={{ display: 'none' }} />\n              <label htmlFor=\"profile-file-selector\">\n                <Icon value=\"fa-camera\" />\n              </label>\n              <span/>\n            </span>\n            <br/>\n            {error && <span className=\"error\">{error}</span>}\n            {success && <span className=\"success\">{success}</span>}\n          </div>\n          <Form onSubmit={this.onSubmit} action={updateAccount} inputs={inputs}>\n            {({ input }) => (\n              <>\n                <input type=\"hidden\" {...input('_id')} />\n                <Text label=\"Full Name\" {...input('name')} placeholder=\"Enter full name\">\n                  <Icon className=\"edit\" value=\"fa-pen\" />\n                </Text>\n                <Text label=\"Phone\" {...input('phone')} placeholder=\"No number listed (add your number for text-alerts)\" type=\"tel\" />\n                <Text label=\"Email\" {...input('email')} placeholder=\"Enter email address\" type=\"email\" />\n                <Select label=\"Receive Email Updates\" {...input('subscription')} options={subscriptions} />\n                <button type=\"submit\" variant=\"dark-blue\" className=\"Button btn btn-dark-blue save\">Save</button>\n              </>\n            )}\n          </Form>\n        </div>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    this.updateInputs(this.props.user.data);\n  }\n\n  componentDidUpdate(props) {\n    const { data } = this.props.user;\n    if (data !== props.user.data) {\n      this.updateInputs(data);\n    }\n  }\n\n  /**\n   * Update inputs\n   */\n  updateInputs(inputs) {\n    this.setState((state) => ({\n      inputs: {\n        ...state.inputs,\n        ...pick(inputs, keys(state.inputs))\n      }\n    }));\n  }\n\n  /**\n   * Save profile\n   */\n  onSubmit() {\n    console.log('asd');\n  }\n}\n\nexport default connect(({ api: { user } }) => {\n  return {\n    user: user.auth\n  };\n})(Account);\n"],"sourceRoot":""}