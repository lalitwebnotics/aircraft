{"version":3,"sources":["../node_modules/lodash/fromPairs.js","components/tabs/Tabs.js","components/hangar/Hangar.js"],"names":["module","exports","pairs","index","length","result","pair","Tabs","this","props","links","relative","location","pathname","substring","base","className","keys","map","path","clsx","active","isActive","key","to","Component","connect","router","Hangar","fromPairs","routes","title"],"mappings":"sHA2BAA,EAAOC,QAZP,SAAmBC,GAKjB,IAJA,IAAIC,GAAS,EACTC,EAAkB,MAATF,EAAgB,EAAIA,EAAME,OACnCC,EAAS,KAEJF,EAAQC,GAAQ,CACvB,IAAIE,EAAOJ,EAAMC,GACjBE,EAAOC,EAAK,IAAMA,EAAK,GAEzB,OAAOD,I,oNCbHE,G,8KAEM,IAAD,SACwCC,KAAKC,MAD7C,IACCC,aADD,MACS,GADT,EAEDC,EAFC,EACaC,SAAYC,SACNC,WAAWN,KAAKC,MAAMM,MAAQ,IAAIX,QAC5D,OACE,yBAAKY,UAAU,QACb,4BACGC,IAAKP,GAAOQ,KAAI,SAACC,GAAD,OACf,wBAAIH,UAAWI,YAAK,CAAEC,OAAQ,EAAKC,SAASH,EAAMR,KAAcY,IAAKJ,GACnE,kBAAC,IAAD,CAAMK,GAAIL,GAAOT,EAAMS,Y,+BAW1BA,EAAMN,GACb,IAAMF,EAAWQ,EAAKL,WAAWN,KAAKC,MAAMM,MAAQ,IAAIX,QACxD,OAAKO,IAAaE,GAGXF,GAAaE,EAASC,UAAU,EAAGH,EAASP,UAAYO,M,GA1BhDc,cA8BJC,eAAQ,YACrB,MAAO,CACLd,SAFiD,EAA3Be,OAAUf,YAArBc,CAIZnB,GClCGqB,E,uKAGF,IAAMlB,EAAQmB,IAAUrB,KAAKC,MAAMqB,OAAOZ,KAAI,kBAAqB,CAArB,EAAGC,KAAH,EAASY,WACvD,OACE,yBAAKf,UAAU,UACb,yBAAKA,UAAU,UACb,yCACA,kBAAC,EAAD,CAAMD,KAAK,UAAUL,MAAOA,KAE9B,yBAAKM,UAAU,WACZc,YAAOtB,KAAKC,MAAMqB,c,GAXRL,aAkBNC,wBAAUE","file":"static/js/19.c08ca9f0.chunk.js","sourcesContent":["/**\n * The inverse of `_.toPairs`; this method returns an object composed\n * from key-value `pairs`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} pairs The key-value pairs.\n * @returns {Object} Returns the new object.\n * @example\n *\n * _.fromPairs([['a', 1], ['b', 2]]);\n * // => { 'a': 1, 'b': 2 }\n */\nfunction fromPairs(pairs) {\n  var index = -1,\n      length = pairs == null ? 0 : pairs.length,\n      result = {};\n\n  while (++index < length) {\n    var pair = pairs[index];\n    result[pair[0]] = pair[1];\n  }\n  return result;\n}\n\nmodule.exports = fromPairs;\n","import keys from 'lodash/keys';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport clsx from 'clsx';\n\nimport './Tabs.scss';\n\n/**\n * Tabs component\n */\nclass Tabs extends Component {\n\n  render() {\n    const { links = {}, location: { pathname } } = this.props,\n          relative = pathname.substring((this.props.base || '').length);\n    return (\n      <div className=\"Tabs\">\n        <ul>\n          {keys(links).map((path) => (\n            <li className={clsx({ active: this.isActive(path, relative) })} key={path}>\n              <Link to={path}>{links[path]}</Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n\n  /**\n   * Is active\n   */\n  isActive(path, pathname) {\n    const relative = path.substring((this.props.base || '').length);\n    if (!relative && !pathname) {\n      return true;\n    }\n    return relative && (pathname.substring(0, relative.length) === relative);\n  }\n}\n\nexport default connect(({ router: { location } }) => {\n  return {\n    location\n  };\n})(Tabs);\n","import fromPairs from 'lodash/fromPairs';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { routes } from '../../routes';\nimport './Hangar.scss';\nimport Tabs from '../tabs/Tabs';\n\n/**\n * Hangar component\n */\nclass Hangar extends Component {\n\n  render() {\n    const links = fromPairs(this.props.routes.map(({ path, title }) => [path, title]));\n    return (\n      <div className=\"Hangar\">\n        <div className=\"header\">\n          <h2>My Hangar</h2>\n          <Tabs base=\"/hangar\" links={links} />\n        </div>\n        <div className=\"content\">\n          {routes(this.props.routes)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect()(Hangar);\n"],"sourceRoot":""}