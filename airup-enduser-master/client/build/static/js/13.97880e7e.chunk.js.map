{"version":3,"sources":["components/utils/Button.js","components/inputs/checkbox/Checkbox.js","components/selector/Selector.js","../node_modules/lodash/fromPairs.js","components/table/Table.js","components/popups/Popup.js","components/popups/Confirm.js","components/utils/Nl2Br.js","components/inputs/toggle/Toggle.js","components/hangar/Products.js"],"names":["Native","forwardRef","props","ref","omit","children","Button","className","size","variant","link","isUndefined","to","Tag","Link","options","type","clsx","Checkbox","args","bind","this","disabled","icon","value","active","onClick","toggle","onToggle","productId","isFunction","onChange","target","name","undefined","Component","Selector","overlay","React","createRef","selected","state","busy","data","item","title","hide","show","freeze","keys","map","key","isActive","caption","onSelect","click","watch","APP_CLICK","reference","current","getReference","scrollTop","offsetTop","cancel","pick","setState","onHide","onShow","module","exports","pairs","index","length","result","pair","Table","head","row","sort","field","isString","getSortLink","isObject","query","route","order","checked","slice","id","i","indexOf","even","odd","infinite","action","join","checkEnd","unscroll","onScroll","direct","updates","allowance","getScroll","height","position","onReachEnd","url","Popup","popup","trigger","Error","setTimeout","activate","once","then","Promise","reject","deactivate","Confirm","cancelClick","content","message","noClose","ok","onTailNumberChange","onImageSelect","Nl2Br","tag","exclusive","call","onConfirm","e","resolve","catch","complete","__html","replace","dangerouslySetInnerHTML","Toggle","useDisabler","classes","sortFields","manufacturer","updated_at","sortKeys","Products","device","products","smDown","includes","count","TITLES","PRODUCT_UPDATES","PRICE","REBATE","product","certificate","_id","permalink","bits","input","toQuery","moment","format","remove","Icon","when","getTracked","fromPairs","bit","toUpperCase","setBusy","trackProducts","track","reloadProducts","connect","api","app","router","tracked","routeQuery"],"mappings":"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","file":"static/js/13.97880e7e.chunk.js","sourcesContent":["import isUndefined from 'lodash/isUndefined';\nimport omit from 'lodash/omit';\nimport React, { forwardRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport clsx from 'clsx';\n\n/**\n * Native button\n */\nexport const Native = forwardRef((props, ref) => (\n  <button {...omit(props, ['children'])} ref={ref}>\n    {props.children}\n  </button>\n));\n\n/**\n * Button component\n */\nexport const Button = forwardRef((props, ref) => {\n  const { className, size, variant } = props,\n        link = !isUndefined(props.to),\n        Tag = link ? Link : Native,\n        options = {};\n  if (!link && isUndefined(props.type)) {\n    options.type = 'button';\n  }\n  return (\n    <Tag\n      {...omit(props, ['children', 'className'])}\n      {...options}\n      className={clsx(\n        'Button',\n        'btn',\n        variant ? ('btn-' + variant) : '',\n        size ? ('btn-' + size) : '' ,\n        className)}\n      ref={ref}>\n      {props.children}\n    </Tag>\n  );\n});\n\nexport default Button;\n","import isFunction from 'lodash/isFunction';\nimport React, { Component } from 'react';\nimport clsx from 'clsx';\n\nimport { bind } from '../../../utils';\nimport './Checkbox.scss';\nimport Icon from '..//../utils/Icon';\n\n/**\n * Checkbox\n */\nclass Checkbox extends Component {\n\n  constructor(...args) {\n    super(...args);\n    bind(this, [\n      'toggle'\n    ]);\n  }\n\n  render() {\n    const { children, className, disabled, icon = 'fa-check', size, value } = this.props;\n    return (\n      <label className={clsx('Checkbox', className, { active: value, disabled }, size ? ('checkbox-' + size) : '')} onClick={this.toggle}>\n        <span className=\"tick\">\n          <Icon value={icon} />\n        </span>\n        {(!children ? '' :\n          <span className=\"caption\">{children}</span>\n        )}\n      </label>\n    );\n  }\n\n  /**\n   * Toggle check\n   */\n  toggle() {\n    const { onToggle, productId } = this.props; \n    if (isFunction(this.props.onChange)) {\n      this.props.onChange({\n        target: {\n          name: this.props.name,\n          type: 'checkbox',\n          value: !this.props.value\n        }\n      });\n    }\n\n    if(onToggle !== undefined && isFunction(onToggle)){\n      this.props.onToggle(productId);\n    }\n  }\n}\n\nexport default Checkbox;\n","import isFunction from 'lodash/isFunction';\nimport isUndefined from 'lodash/isUndefined';\nimport keys from 'lodash/keys';\nimport pick from 'lodash/pick';\nimport React, { Component } from 'react';\nimport clsx from 'clsx';\n\nimport { bind, freeze } from '../../utils';\nimport { watch } from '../../store';\nimport { APP_CLICK } from '../app/actions';\nimport './Selector.scss';\nimport Icon from '../utils/Icon';\nimport Loader from '../utils/loader/Loader';\n\n/**\n * Selector component\n */\nexport default class Selector extends Component {\n\n  constructor(...args) {\n    super(...args);\n    bind(this, [\n      'hide',\n      'onSelect',\n      'show',\n      'toggle'\n    ]);\n    this.overlay = React.createRef();\n    this.selected = React.createRef();\n    this.state = {\n      active: false\n    };\n  }\n\n  render() {\n    const { busy, children, className, data = {}, disabled, item, selected, title } = this.props,\n          { active } = this.state,\n          { hide, show, toggle } = this;\n    return (\n      <span className={clsx('Selector', className, { active, disabled })} onClick={freeze(show)}>\n        {(isFunction(children) ?\n          children({ hide, show, toggle }) :\n          <Icon value=\"fas-caret-down\" />\n        )}\n        <div className=\"selector-overlay\" ref={this.overlay}>\n          {(busy ?\n            <Loader /> :\n            <ul>\n              {keys(data).map((key) => {\n                const isActive = (key === selected),\n                      caption = isFunction(item) ? item(data[key], key) : data[key];\n                return (\n                  <li\n                    key={key}\n                    className={clsx({ active: isActive })}\n                    title={isFunction(title) ? title(data[key]) : caption}\n                    {...(isActive ? { ref: this.selected } : {})}\n                    onClick={freeze(this.onSelect, key)}>\n                    {caption}\n                  </li>\n                );\n              })}\n            </ul>\n          )}\n        </div>\n      </span>\n    )\n  }\n\n  componentDidMount() {\n    this.click = watch([APP_CLICK], this.hide);\n    if (!isUndefined(this.props.reference)) {\n      this.props.reference.current = this.getReference();\n    }\n  }\n\n  componentDidUpdate(props, state) {\n    if (this.props.reference !== props.reference) {\n      this.props.reference.current = this.getReference();\n    }\n    if (this.state.active) {\n      if (this.props.selected && this.selected.current) {\n        this.overlay.current.scrollTop = this.selected.current.offsetTop - 10;\n      } else if (this.state.active !== state.active) {\n        this.overlay.current.scrollTop = 0;\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.click.cancel();\n    if (!isUndefined(this.props.reference)) {\n      this.props.reference.current = null;\n    }\n  }\n\n  /**\n   * Get selector reference\n   */\n  getReference() {\n    return pick(this, [\n      'hide',\n      'show'\n    ]);\n  }\n\n  /**\n   * Hide\n   */\n  hide() {\n    this.setState({\n      active: false\n    });\n    if (isFunction(this.props.onHide)) {\n      this.props.onHide();\n    }\n  }\n\n  /**\n   * Select an item\n   */\n  onSelect(name) {\n    if (isFunction(this.props.onSelect)) {\n      this.props.onSelect(this.props.data[name], name);\n    }\n    this.hide();\n  }\n\n  /**\n   * Show overlay\n   */\n  show() {\n    if (this.props.disabled) {\n      return;\n    }\n    this.setState({\n      active: true\n    });\n    if (isFunction(this.props.onShow)) {\n      this.props.onShow();\n    }\n  }\n\n  /**\n   * Toggle\n   */\n  toggle() {\n    return this[this.state.active ? 'hide' : 'show']();\n  }\n}\n","/**\n * The inverse of `_.toPairs`; this method returns an object composed\n * from key-value `pairs`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} pairs The key-value pairs.\n * @returns {Object} Returns the new object.\n * @example\n *\n * _.fromPairs([['a', 1], ['b', 2]]);\n * // => { 'a': 1, 'b': 2 }\n */\nfunction fromPairs(pairs) {\n  var index = -1,\n      length = pairs == null ? 0 : pairs.length,\n      result = {};\n\n  while (++index < length) {\n    var pair = pairs[index];\n    result[pair[0]] = pair[1];\n  }\n  return result;\n}\n\nmodule.exports = fromPairs;\n","import isFunction from 'lodash/isFunction';\nimport isObject from 'lodash/isObject';\nimport isString from 'lodash/isString';\nimport keys from 'lodash/keys';\nimport React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport clsx from 'clsx';\n\nimport { join, watch } from '../../store';\nimport { freeze, getScroll, onScroll, sort } from '../../utils';\nimport './Table.scss';\nimport Icon from '../utils/Icon';\nimport Loader from '../utils/loader/Loader';\nimport Selector from '../selector/Selector';\n\n/**\n * Table component\n */\nexport default class Table extends Component {\n\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      keys: [],\n      selected: []\n    };\n  }\n\n  render() {\n    const { busy, children, data } = this.props,\n          { selected } = this.state,\n          { head, row } = children();\n    return (\n      <div className={clsx('Table', { busy })}>\n        {(!busy ? '' :\n          <Loader />\n        )}\n        <table>\n          <thead>\n            {head && head({\n              selected: (selected.length && (selected.length === this.state.keys.length)),\n              sort: (field, title) => {\n                if (isString(field)) {\n                  return this.getSortLink(field, title);\n                } else if (isObject(field)) {\n                  const { query } = this.props.route;\n                  return (\n                    <Selector\n                      className=\"sort-selector\"\n                      data={field}\n                      item={(caption, key) => this.getSortLink(key, caption)}\n                      title={(caption) => caption}>\n                      {({ toggle }) => (\n                        <span onClick={freeze(toggle)}>\n                          <span>{field[query.sort] || title || 'Sort by'}</span>\n                          <Icon value={'fa-chevron-' + ((query.order === 'desc') ? 'up' : 'down')} />\n                        </span>\n                      )}\n                    </Selector>\n                  );\n                }\n              },\n              state: this.state,\n              toggle: (checked) => {\n                this.setState((state) => ({\n                  ...state,\n                  selected: checked ? state.keys.slice(0) : []\n                }));\n              }\n            })}\n          </thead>\n          <tbody>\n            {this.state.keys.map((id, i) => {\n              const index = selected.indexOf(id),\n                    even = (i % 2);\n              if (!data[id]) {\n                return (\n                  <Fragment key={id}></Fragment>\n                );\n              }\n              return (\n                <Fragment key={id}>\n                  {row(data[id], {\n                    even,\n                    index: i,\n                    odd: !even,\n                    selected: index >= 0,\n                    toggle: (checked) => {\n                      if (checked && index < 0) {\n                        this.setState({\n                          selected: [\n                            ...selected,\n                            id\n                          ]\n                        });\n                      } else if (!checked && index >= 0) {\n                        this.setState({\n                          selected: [\n                            ...selected.slice(0, index),\n                            ...selected.slice(index + 1)\n                          ]\n                        });\n                      }\n                    }\n                  })}\n                </Fragment>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n\n  componentDidMount() {\n    if (this.props.infinite) {\n      const { action } = this.props.infinite;\n      this.action = watch([join(action, 'COMPLETE')], () => {\n        this.checkEnd();\n      });\n      this.unscroll = onScroll(() => {\n        if (!this.props.busy) {\n          this.checkEnd();\n        }\n      });\n    }\n  }\n\n  componentDidUpdate(props) {\n    if (this.props.data !== props.data || (this.props.direct && !this.state.keys.length)) {\n      const updates = {\n        keys: keys(this.props.data)\n      };\n      this.setState(updates);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.action) {\n      this.action.cancel();\n      this.unscroll();\n    }\n  }\n\n  /**\n   * Check if reached end\n   */\n  checkEnd(allowance = 50) {\n    const { height, position } = getScroll();\n    if (position > (height - allowance)) {\n      if (this.props.infinite && isFunction(this.props.infinite.onReachEnd)) {\n        this.props.infinite.onReachEnd();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Get sort link\n   */\n  getSortLink(field, title) {\n    const { active, icon, url } = sort(this.props.route, field);\n    return (\n      <Link to={url} className={clsx('sort', { active })}>\n        <span>{title}</span>\n        <Icon value={'fas-' + icon} />\n      </Link>\n    );\n  }\n}\n","import isFunction from 'lodash/isFunction';\nimport isUndefined from 'lodash/isUndefined';\nimport pick from 'lodash/pick';\nimport React, { Component, createRef } from 'react';\nimport clsx from 'clsx';\n\nimport { bind, freeze, once } from '../../utils';\nimport './Popup.scss';\n\n/**\n * Popup component\n */\nexport default class Popup extends Component {\n\n  constructor(...args) {\n    super(...args);\n    this.busy = false;\n    this.popup = createRef();\n    this.state = {\n      active: false,\n      show: false\n    };\n    bind(this, [\n      'activate',\n      'deactivate',\n      'hide',\n      'show'\n    ]);\n  }\n\n  render() {\n    const { children, className, disabled, trigger } = this.props,\n          { active, show } = this.state;\n    return (\n      <>\n        {trigger(pick(this, ['show']))}\n        {(!show ? '' :\n          <div className={clsx('Popup', className, { active, disabled })} ref={this.popup} onClick={this.hide}>\n            <div className=\"popup-content\" onClick={freeze(this.props.onClick)}>\n              {children(pick(this, ['hide']))}\n            </div>\n          </div>\n        )}\n      </>\n    );\n  }\n\n  componentDidMount() {\n    if (isUndefined(this.props.trigger)) {\n      throw new Error('Trigger prop must be provided');\n    }\n  }\n\n  componentDidUpdate(props, { show }) {\n    if (this.state.show && this.state.show !== show) {\n      setTimeout(this.activate, 50);\n    }\n  }\n\n  /**\n   * Activate\n   */\n  activate() {\n    this.setState({\n      active: true\n    });\n    once(this.popup.current, 'transitionend').then(() => {\n      this.busy = false;\n      if (isFunction(this.props.onShow)) {\n        this.props.onShow();\n      }\n    });\n  }\n\n  /**\n   * Deactivate\n   */\n  deactivate() {\n    this.setState({\n      active: false\n    });\n  }\n\n  /**\n   * Hide\n   */\n  hide(...args) {\n    if (this.busy || this.props.disabled) {\n      return Promise.reject('Popup is busy or disabled');\n    }\n    this.busy = true;\n    this.deactivate();\n    return once(this.popup.current, 'transitionend').then(() => {\n      this.busy = false;\n      this.setState({\n        show: false\n      });\n      if (isFunction(this.props.onHide)) {\n        this.props.onHide(...args);\n      }\n      return this;\n    });\n  }\n\n  /**\n   * Show\n   */\n  show() {\n    if (this.busy || this.props.disabled) {\n      return;\n    }\n    this.busy = true;\n    this.setState({\n      show: true\n    });\n  }\n}\n","import isFunction from 'lodash/isFunction';\nimport React, { Component } from 'react';\nimport clsx from 'clsx';\n\nimport { bind, call } from '../../utils';\nimport Popup from './Popup';\nimport './Confirm.scss';\nimport Button from '../utils/Button';\nimport Nl2Br from '../utils/Nl2Br';\n\n/**\n * Confirm popup component\n */\nexport default class Confirm extends Component {\n\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      busy: false\n    };\n    bind(this, [\n      'onConfirm'\n    ]);\n  }\n\n  render() {\n    const { cancel = {}, children, className, cancelClick, content, noClose = false, message, ok = {}, onTailNumberChange,\n        onImageSelect } = this.props,\n          { busy } = this.state;\n    return (\n      <Popup className={clsx('Confirm', className)} disabled={busy} trigger={children}>\n        {({ hide }) => (\n          <>\n            <Nl2Br tag=\"p\">{message}</Nl2Br>\n            {(content ? content : <></>)}\n\n            <div className={clsx('buttons', { exclusive: !!ok.exclusive })}>\n              {(ok.exclusive ? <></> :\n                <Button variant={cancel.variant || 'dark-blue'} className=\"cancel\" disabled={busy} onClick={cancelClick ? cancelClick(hide) : hide}>\n                  {cancel.title || 'Cancel'}\n                </Button>\n              )}\n              {!ok.hide && <Button variant={ok.variant || 'empty'} className=\"ok\" disabled={busy} onClick={call(this.onConfirm, hide)}>\n                {ok.title || 'OK'}\n              </Button>}\n            </div>\n          </>\n        )}\n      </Popup>\n    );\n  }\n\n  onConfirm(hide, e) {\n    if (isFunction(this.props.onConfirm)) {\n      this.setState({\n        busy: true\n      });\n      Promise.resolve(this.props.onConfirm(e)).catch(() => null).then((complete = true) => {\n        this.setState({\n          busy: false\n        });\n        if (complete !== false) {\n          Promise.resolve(hide()).catch(() => null).then(() => {\n            if (isFunction(complete)) {\n              complete();\n            }\n          });\n        }\n      });\n    }\n  }\n}\n","import isString from 'lodash/isString';\nimport isUndefined from 'lodash/isUndefined';\nimport React from 'react';\n\n/**\n * New line to BR\n */\nexport default function Nl2Br({ children, className, tag }) {\n  if (isUndefined(children)) {\n    return <></>;\n  }\n  if (!isString(children)) {\n    throw new Error('Content must be a string');\n  }\n  const Tag = tag || 'div',\n        __html = children.replace(/(?:\\r\\n|\\r|\\n)/g, '<br />');\n  return (\n    <Tag className={className} dangerouslySetInnerHTML={{ __html }}></Tag>\n  );\n}\n","import isFunction from 'lodash/isFunction';\nimport React, { Component } from 'react';\nimport clsx from 'clsx';\n\nimport { bind } from '../../../utils';\nimport './Toggle.scss';\n\n/**\n * Toggle input\n */\nexport default class Toggle extends Component {\n\n  constructor(...args) {\n    super(...args);\n    bind(this, [\n      'toggle'\n    ]);\n  }\n\n  render() {\n    const { className, disabled, useDisabler = true, variant, value } = this.props;\n    const classes = {\n      active: value\n    };\n    if (useDisabler) {\n      classes.disabled = disabled;\n    }\n    return (\n      <label className={clsx('Toggle', classes, variant ? ('toggle-' + variant) : undefined, className)} onClick={this.toggle}>\n        <span className=\"tick\"></span>\n      </label>\n    );\n  }\n\n  toggle() {\n    if (this.props.disabled) {\n      return;\n    }\n    if (isFunction(this.props.onChange)) {\n      this.props.onChange({\n        target: {\n          name: this.props.name,\n          type: 'toggle',\n          value: !this.props.value\n        }\n      });\n    }\n  }\n}\n","import fromPairs from 'lodash/fromPairs';\nimport includes from 'lodash/includes';\nimport omit from 'lodash/omit';\nimport keys from 'lodash/keys';\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\n\nimport { bind, call, toQuery } from '../../utils';\nimport { when } from '../../store';\nimport { routeQuery } from '../../routes';\nimport { PRODUCT_UPDATES, TITLES } from '../../api/product/Product';\nimport { getTracked, reloadProducts, trackProducts } from '../../api/product/actions';\nimport './Products.scss';\nimport Checkbox from '../inputs/checkbox/Checkbox';\nimport Confirm from '../popups/Confirm';\nimport Icon from '../utils/Icon';\nimport Table from '../table/Table';\nimport Toggle from '../inputs/toggle/Toggle';\n\n/**\n * Sort fields\n */\nexport const sortFields = {\n  name: 'Product Name',\n  manufacturer: 'Manufacturer',\n  updated_at: 'Last Approved'\n};\n\n/**\n * Sort keys\n */\nexport const sortKeys = keys(sortFields);\n\n/**\n * Products hangar\n */\nclass Products extends Component {\n\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      busy: {},\n      updates: {}\n    };\n    bind(this, [\n      'onToggle',\n      'remove'\n    ]);\n  }\n\n  render() {\n    const { device, products, route } = this.props,\n          { updates } = this.state,\n          busy = products.busy,\n          smDown = includes(['xs', 'sm'], device);\n    return (\n      <div className=\"Products\">\n        <div className=\"description\">\n          Below contains all the products you are tracking updates for. You can configure tracking settings for each one of them.\n        </div>\n        <Table {...products} route={route}>\n          {() => ({\n            head: ({ selected, sort, toggle }) => (\n              <Fragment>\n                <tr>\n                  <th>\n                    <Checkbox icon=\"fa-minus\" value={selected} size=\"sm\" onChange={call(toggle, !selected)}>\n                      {selected ? 'Deselect' : 'Select'} All ({products.count})\n                    </Checkbox>\n                  </th>\n                  <th></th>\n                  {(smDown ? <></> :\n                    <Fragment>\n                      <th></th>\n                      <th></th>\n                      <th></th>\n                      <th></th>\n                    </Fragment>\n                  )}\n                  <th>\n                    {(smDown ? sort(sortFields) : <></>)}\n                  </th>\n                </tr>\n                {(smDown ? <></> :\n                  <tr>\n                    <th></th>\n                    {sortKeys.map((key) => (\n                      <th key={key}>{sort(key, sortFields[key])}</th>\n                    ))}\n                    <th className=\"toggle\">{TITLES.PRODUCT_UPDATES.PRICE}</th>\n                    <th className=\"toggle\">{TITLES.PRODUCT_UPDATES.REBATE}</th>\n                    <th></th>\n                  </tr>\n                )}\n              </Fragment>\n            ),\n            row: (product, { odd, selected, toggle }) => {\n              const { certificate, _id, manufacturer, name, permalink, updated_at } = product,\n                    bits = updates[_id] || 0,\n                    disabled = !!this.state.busy[_id] || busy,\n                    input = {\n                      disabled,\n                      onChange: call(this.onToggle, _id),\n                      variant: 'light-blue'\n                    };\n              return (\n                <tr className={clsx({ odd, selected })}>\n                  <td><Checkbox value={selected} size=\"sm\" onChange={call(toggle, !selected)} /></td>\n                  {(!smDown ?\n                    <Fragment>\n                      <td>\n                        <Link to={'/products/' + permalink + toQuery(route.query)}>\n                          {name + (certificate ? (' (STC ' + certificate.reference + ')') : '')}\n                        </Link>\n                      </td>\n                      <td><Link to=\"/\">{manufacturer.name}</Link></td>\n                      <td>{moment(updated_at).format('MMM DD, YYYY')}</td>\n                      <td className=\"toggle\">\n                        <Toggle value={bits & PRODUCT_UPDATES.PRICE} name=\"price\" {...input} />\n                      </td>\n                      <td className=\"toggle\">\n                        <Toggle value={bits & PRODUCT_UPDATES.REBATE} name=\"rebate\" {...input} />\n                      </td>\n                    </Fragment> :\n                    <td>\n                      <Link to={'/products/' + permalink + toQuery(route.query)}>\n                        {name + (certificate ? (' (STC ' + certificate.reference + ')') : '')}\n                      </Link>\n                      <br />\n                      <Link to=\"/\">{manufacturer.name}</Link><br />\n                      Last approved: {moment(updated_at).format('MMM DD, YYYY')}\n                    </td>\n                  )}\n                  <td className=\"delete\">\n                    <Confirm\n                      disabled={disabled}\n                      message=\"Are you sure you'd like to remove this product from your hanger and stop tracking its updates?\"\n                      ok={{ title: 'Stop Tracking' }}\n                      onConfirm={call(this.remove, _id)}>\n                      {({ show }) => (\n                        <Icon disabled={disabled} value=\"fa-trash\" onClick={show} />\n                      )}\n                    </Confirm>\n                  </td>\n                </tr>\n              );\n            }\n          })}\n        </Table>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    when(getTracked()).then(() => {\n      this.setState({\n        updates: fromPairs(keys(this.props.products.data).map((_id) => [\n          _id,\n          this.props.products.data[_id].updates || 0\n        ]))\n      });\n    });\n  }\n\n  /**\n   * Toggle\n   */\n  onToggle(_id, { target: { name, value } }) {\n    const current = this.state.updates[_id],\n          bit = PRODUCT_UPDATES[name.toUpperCase()],\n          active = current & bit,\n          id = [_id];\n    let updates = current;\n    if (value && !active) {\n      updates = current + bit;\n    } else if (!value && active) {\n      updates = current - bit;\n    }\n    this.setBusy(_id, true);\n    this.setState((state) => ({\n      updates: {\n        ...state.updates,\n        [_id]: updates\n      }\n    }));\n    when(trackProducts({\n      id,\n      track: true,\n      updates\n    })).then(() => (\n      when(reloadProducts({ id })).then((result) => {\n        this.setState(({ updates }) => ({\n          updates: {\n            ...updates,\n            [result._id]: result.updates || 0\n          }\n        }))\n      })\n    )).catch(() => (\n      Promise.resolve()\n    )).then(() => {\n      this.setBusy(_id, false);\n    });\n  }\n\n  /**\n   * Set busy\n   */\n  setBusy(_id, busy) {\n    this.setState((state) => ({\n      busy: {\n        ...state.busy,\n        [_id]: busy\n      }\n    }));\n  }\n\n  /**\n   * Remove product\n   */\n  remove(_id) {\n    this.setBusy(_id, true);\n    when(trackProducts({\n      id: [_id],\n      track: false\n    })).then(() => (\n      when(getTracked())\n    )).catch(() => (\n      Promise.resolve()\n    )).then(() => {\n      this.setState((state) => ({\n        busy: omit(state.busy, [_id])\n      }));\n    });\n  }\n}\n\nexport default connect(({ api: { product }, app, router }) => {\n  return {\n    device: app.device,\n    products: product.tracked,\n    route: routeQuery(router),\n    track: product.track\n  };\n})(Products);\n"],"sourceRoot":""}