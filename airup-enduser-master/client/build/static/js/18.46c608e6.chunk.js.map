{"version":3,"sources":["components/selector/Selector.js","components/table/Table.js","components/hangar/AlertHistory.js"],"names":["Selector","args","bind","overlay","React","createRef","selected","state","active","this","props","busy","children","className","data","disabled","item","title","hide","show","toggle","clsx","onClick","freeze","isFunction","value","ref","keys","map","key","isActive","caption","onSelect","click","watch","APP_CLICK","isUndefined","reference","current","getReference","scrollTop","offsetTop","cancel","pick","setState","onHide","name","onShow","Component","Table","head","row","length","sort","field","isString","getSortLink","isObject","query","route","order","checked","slice","id","i","index","indexOf","even","odd","infinite","action","join","checkEnd","unscroll","onScroll","direct","updates","allowance","getScroll","height","position","onReachEnd","icon","url","to","sortFields","created_at","sortKeys","Aircraft","products","toRemove","ALERT_HISTORY","alertHistory","device","includes","alertRecord","newValues","productChange","Date","toLocaleString","reload","updateList","first","isEqual","dispatch","getAlertHistory","size","count","limit","connect","product","api","app","router","routeQuery"],"mappings":"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","file":"static/js/18.46c608e6.chunk.js","sourcesContent":["import isFunction from 'lodash/isFunction';\nimport isUndefined from 'lodash/isUndefined';\nimport keys from 'lodash/keys';\nimport pick from 'lodash/pick';\nimport React, { Component } from 'react';\nimport clsx from 'clsx';\n\nimport { bind, freeze } from '../../utils';\nimport { watch } from '../../store';\nimport { APP_CLICK } from '../app/actions';\nimport './Selector.scss';\nimport Icon from '../utils/Icon';\nimport Loader from '../utils/loader/Loader';\n\n/**\n * Selector component\n */\nexport default class Selector extends Component {\n\n  constructor(...args) {\n    super(...args);\n    bind(this, [\n      'hide',\n      'onSelect',\n      'show',\n      'toggle'\n    ]);\n    this.overlay = React.createRef();\n    this.selected = React.createRef();\n    this.state = {\n      active: false\n    };\n  }\n\n  render() {\n    const { busy, children, className, data = {}, disabled, item, selected, title } = this.props,\n          { active } = this.state,\n          { hide, show, toggle } = this;\n    return (\n      <span className={clsx('Selector', className, { active, disabled })} onClick={freeze(show)}>\n        {(isFunction(children) ?\n          children({ hide, show, toggle }) :\n          <Icon value=\"fas-caret-down\" />\n        )}\n        <div className=\"selector-overlay\" ref={this.overlay}>\n          {(busy ?\n            <Loader /> :\n            <ul>\n              {keys(data).map((key) => {\n                const isActive = (key === selected),\n                      caption = isFunction(item) ? item(data[key], key) : data[key];\n                return (\n                  <li\n                    key={key}\n                    className={clsx({ active: isActive })}\n                    title={isFunction(title) ? title(data[key]) : caption}\n                    {...(isActive ? { ref: this.selected } : {})}\n                    onClick={freeze(this.onSelect, key)}>\n                    {caption}\n                  </li>\n                );\n              })}\n            </ul>\n          )}\n        </div>\n      </span>\n    )\n  }\n\n  componentDidMount() {\n    this.click = watch([APP_CLICK], this.hide);\n    if (!isUndefined(this.props.reference)) {\n      this.props.reference.current = this.getReference();\n    }\n  }\n\n  componentDidUpdate(props, state) {\n    if (this.props.reference !== props.reference) {\n      this.props.reference.current = this.getReference();\n    }\n    if (this.state.active) {\n      if (this.props.selected && this.selected.current) {\n        this.overlay.current.scrollTop = this.selected.current.offsetTop - 10;\n      } else if (this.state.active !== state.active) {\n        this.overlay.current.scrollTop = 0;\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.click.cancel();\n    if (!isUndefined(this.props.reference)) {\n      this.props.reference.current = null;\n    }\n  }\n\n  /**\n   * Get selector reference\n   */\n  getReference() {\n    return pick(this, [\n      'hide',\n      'show'\n    ]);\n  }\n\n  /**\n   * Hide\n   */\n  hide() {\n    this.setState({\n      active: false\n    });\n    if (isFunction(this.props.onHide)) {\n      this.props.onHide();\n    }\n  }\n\n  /**\n   * Select an item\n   */\n  onSelect(name) {\n    if (isFunction(this.props.onSelect)) {\n      this.props.onSelect(this.props.data[name], name);\n    }\n    this.hide();\n  }\n\n  /**\n   * Show overlay\n   */\n  show() {\n    if (this.props.disabled) {\n      return;\n    }\n    this.setState({\n      active: true\n    });\n    if (isFunction(this.props.onShow)) {\n      this.props.onShow();\n    }\n  }\n\n  /**\n   * Toggle\n   */\n  toggle() {\n    return this[this.state.active ? 'hide' : 'show']();\n  }\n}\n","import isFunction from 'lodash/isFunction';\nimport isObject from 'lodash/isObject';\nimport isString from 'lodash/isString';\nimport keys from 'lodash/keys';\nimport React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport clsx from 'clsx';\n\nimport { join, watch } from '../../store';\nimport { freeze, getScroll, onScroll, sort } from '../../utils';\nimport './Table.scss';\nimport Icon from '../utils/Icon';\nimport Loader from '../utils/loader/Loader';\nimport Selector from '../selector/Selector';\n\n/**\n * Table component\n */\nexport default class Table extends Component {\n\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      keys: [],\n      selected: []\n    };\n  }\n\n  render() {\n    const { busy, children, data } = this.props,\n          { selected } = this.state,\n          { head, row } = children();\n    return (\n      <div className={clsx('Table', { busy })}>\n        {(!busy ? '' :\n          <Loader />\n        )}\n        <table>\n          <thead>\n            {head && head({\n              selected: (selected.length && (selected.length === this.state.keys.length)),\n              sort: (field, title) => {\n                if (isString(field)) {\n                  return this.getSortLink(field, title);\n                } else if (isObject(field)) {\n                  const { query } = this.props.route;\n                  return (\n                    <Selector\n                      className=\"sort-selector\"\n                      data={field}\n                      item={(caption, key) => this.getSortLink(key, caption)}\n                      title={(caption) => caption}>\n                      {({ toggle }) => (\n                        <span onClick={freeze(toggle)}>\n                          <span>{field[query.sort] || title || 'Sort by'}</span>\n                          <Icon value={'fa-chevron-' + ((query.order === 'desc') ? 'up' : 'down')} />\n                        </span>\n                      )}\n                    </Selector>\n                  );\n                }\n              },\n              state: this.state,\n              toggle: (checked) => {\n                this.setState((state) => ({\n                  ...state,\n                  selected: checked ? state.keys.slice(0) : []\n                }));\n              }\n            })}\n          </thead>\n          <tbody>\n            {this.state.keys.map((id, i) => {\n              const index = selected.indexOf(id),\n                    even = (i % 2);\n              if (!data[id]) {\n                return (\n                  <Fragment key={id}></Fragment>\n                );\n              }\n              return (\n                <Fragment key={id}>\n                  {row(data[id], {\n                    even,\n                    index: i,\n                    odd: !even,\n                    selected: index >= 0,\n                    toggle: (checked) => {\n                      if (checked && index < 0) {\n                        this.setState({\n                          selected: [\n                            ...selected,\n                            id\n                          ]\n                        });\n                      } else if (!checked && index >= 0) {\n                        this.setState({\n                          selected: [\n                            ...selected.slice(0, index),\n                            ...selected.slice(index + 1)\n                          ]\n                        });\n                      }\n                    }\n                  })}\n                </Fragment>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n\n  componentDidMount() {\n    if (this.props.infinite) {\n      const { action } = this.props.infinite;\n      this.action = watch([join(action, 'COMPLETE')], () => {\n        this.checkEnd();\n      });\n      this.unscroll = onScroll(() => {\n        if (!this.props.busy) {\n          this.checkEnd();\n        }\n      });\n    }\n  }\n\n  componentDidUpdate(props) {\n    if (this.props.data !== props.data || (this.props.direct && !this.state.keys.length)) {\n      const updates = {\n        keys: keys(this.props.data)\n      };\n      this.setState(updates);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.action) {\n      this.action.cancel();\n      this.unscroll();\n    }\n  }\n\n  /**\n   * Check if reached end\n   */\n  checkEnd(allowance = 50) {\n    const { height, position } = getScroll();\n    if (position > (height - allowance)) {\n      if (this.props.infinite && isFunction(this.props.infinite.onReachEnd)) {\n        this.props.infinite.onReachEnd();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Get sort link\n   */\n  getSortLink(field, title) {\n    const { active, icon, url } = sort(this.props.route, field);\n    return (\n      <Link to={url} className={clsx('sort', { active })}>\n        <span>{title}</span>\n        <Icon value={'fas-' + icon} />\n      </Link>\n    );\n  }\n}\n","import includes from 'lodash/includes';\nimport isUndefined from 'lodash/isUndefined';\nimport keys from 'lodash/keys';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport clsx from 'clsx';\nimport { size, isEqual } from 'lodash';\n\nimport { bind } from '../../utils';\nimport {\n  ALERT_HISTORY,\n  getAlertHistory\n} from '../../api/product/actions';\nimport { routeQuery } from '../../routes';\nimport './AlertHistory.scss';\nimport Table from '../table/Table';\n\n/**\n * Sort fields\n */\nexport const sortFields = {\n  created_at: 'Alert Date',\n};\n\n/**\n * Sort keys\n */\nexport const sortKeys = keys(sortFields);\n\n/**\n * Aircraft hangar\n */\nclass Aircraft extends Component {\n\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: {},\n      toRemove: [],\n    };\n    bind(this, [\n      'reload',\n      'onReachEnd',\n      'updateList'\n    ]);\n    this.infinite = {\n      action: ALERT_HISTORY,\n      onReachEnd: this.onReachEnd\n    };\n  }\n\n  render() {\n    const { alertHistory, device, route } = this.props,\n      smDown = includes(['xs', 'sm'], device);\n    const { toRemove } = this.state;\n    return (\n      <div className=\"AlertHistory\">\n        <div className=\"description\">\n          Below contains alert history of update sent for tracked products.\n        </div>\n\n        <Table {...alertHistory} infinite={this.infinite} route={route}>\n          {() => ({\n            head: ({ selected, sort, toggle }) => (\n              <tr>\n                <th>Product Name</th>\n                <th>Change Type</th>\n                {sortKeys.map((key) => (\n                  <th key={key}>{sort(key, sortFields[key])}</th>\n                ))}\n              </tr>\n            ),\n            row: (alertRecord, { index, odd, selected, toggle }) => {\n              return (\n                <>\n                  <tr className={clsx({ odd, selected })}>\n                    <td>{alertRecord.newValues.name}</td>\n                    <td>{alertRecord.productChange ? 'Price Changes' : (alertRecord ? 'Rebate Changes' : 'Details Changes')}</td>\n                    <td>{new Date(alertRecord.created_at).toLocaleString()}</td>\n                  </tr>\n                </>\n              );\n            }\n          })}\n        </Table>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    this.reload();\n  }\n\n  componentDidUpdate(props, state) {\n    this.updateList(props, state);\n  }\n\n  /**\n   * update list\n   */\n  updateList(props, state) {\n    const first = isUndefined(props) && isUndefined(state),\n      {query} = this.props.route;\n\n    if (first || !isEqual(query, props.route.query)) {\n      this.props.dispatch(getAlertHistory(query));\n    }\n  }\n\n  /**\n   * Reload\n   */\n  reload() {\n    this.props.dispatch(getAlertHistory());\n  }\n\n  /**\n   * On reach end\n   */\n  onReachEnd() {\n    const length = size(this.props.alertHistory.data);\n    if (length < this.props.alertHistory.count) {\n      const {query} = this.props.route;\n      this.props.dispatch(getAlertHistory({\n        ...query,\n        limit: length + 10\n      }));\n    }\n  }\n}\n\nexport default connect(({ api: { product }, app, router }) => {\n  return {\n    alertHistory: product.alertHistory,\n    device: app.device,\n    route: routeQuery(router)\n  };\n})(Aircraft);\n"],"sourceRoot":""}